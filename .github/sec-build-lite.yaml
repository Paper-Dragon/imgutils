- Target: nmaguiar/imgutils:build-lite (alpine 3.19.1)
  Class: os-pkgs
  Type: alpine
- Target: usr/bin/crictl
  Class: lang-pkgs
  Type: gobinary
  Vulnerabilities:
  - VulnerabilityID: CVE-2023-47108
    PkgName: go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc
    PkgIdentifier:
      PURL: pkg:golang/go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc@v0.42.0
    InstalledVersion: v0.42.0
    FixedVersion: 0.46.0
    Status: fixed
    Layer:
      Digest: sha256:935259591895f842028e7780131e0346a2575b0de460b375cc34e29323efd7f6
      DiffID: sha256:53465a1255def6f475e41e62bc68fdbf37ed4229edea2f24067c495c22c362ce
    SeveritySource: ghsa
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2023-47108
    DataSource:
      ID: ghsa
      Name: GitHub Security Advisory Go
      URL: https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago
    Title: 'opentelemetry-go-contrib: DoS vulnerability in otelgrpc due to unbound cardinality metrics'
    Description: OpenTelemetry-Go Contrib is a collection of third-party packages for OpenTelemetry-Go. Prior to version 0.46.0, the grpc Unary Server Interceptor out of the box adds labels `net.peer.sock.addr` and `net.peer.sock.port` that have unbound cardinality. It leads to the server's potential memory exhaustion when many malicious requests are sent. An attacker can easily flood the peer address and port for requests. Version 0.46.0 contains a fix for this issue. As a workaround to stop being affected, a view removing the attributes can be used. The other possibility is to disable grpc metrics instrumentation by passing `otelgrpc.WithMeterProvider` option with `noop.NewMeterProvider`.
    Severity: HIGH
    CweIDs:
    - CWE-770
    VendorSeverity:
      amazon: 3
      cbl-mariner: 3
      ghsa: 3
      nvd: 3
      redhat: 2
    CVSS:
      ghsa:
        V3Vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
        V3Score: 7.5
      nvd:
        V3Vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
        V3Score: 7.5
      redhat:
        V3Vector: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H
        V3Score: 7.5
    References:
    - https://access.redhat.com/security/cve/CVE-2023-47108
    - https://github.com/open-telemetry/opentelemetry-go-contrib
    - https://github.com/open-telemetry/opentelemetry-go-contrib/blob/9d4eb7e7706038b07d33f83f76afbe13f53d171d/instrumentation/google.golang.org/grpc/otelgrpc/interceptor.go#L327
    - https://github.com/open-telemetry/opentelemetry-go-contrib/blob/instrumentation/google.golang.org/grpc/otelgrpc/v0.45.0/instrumentation/google.golang.org/grpc/otelgrpc/config.go#L138
    - https://github.com/open-telemetry/opentelemetry-go-contrib/commit/b44dfc9092b157625a5815cb437583cee663333b
    - https://github.com/open-telemetry/opentelemetry-go-contrib/pull/4322
    - https://github.com/open-telemetry/opentelemetry-go-contrib/security/advisories/GHSA-8pgv-569h-w5rw
    - https://nvd.nist.gov/vuln/detail/CVE-2023-47108
    - https://pkg.go.dev/go.opentelemetry.io/otel/metric/noop#NewMeterProvider
    - https://www.cve.org/CVERecord?id=CVE-2023-47108
    PublishedDate: '2023-11-10T19:15:16.41Z'
    LastModifiedDate: '2023-11-20T19:34:26.493Z'
  - VulnerabilityID: CVE-2024-24786
    PkgName: google.golang.org/protobuf
    PkgIdentifier:
      PURL: pkg:golang/google.golang.org/protobuf@v1.31.0
    InstalledVersion: v1.31.0
    FixedVersion: 1.33.0
    Status: fixed
    Layer:
      Digest: sha256:935259591895f842028e7780131e0346a2575b0de460b375cc34e29323efd7f6
      DiffID: sha256:53465a1255def6f475e41e62bc68fdbf37ed4229edea2f24067c495c22c362ce
    SeveritySource: ghsa
    PrimaryURL: https://avd.aquasec.com/nvd/cve-2024-24786
    DataSource:
      ID: ghsa
      Name: GitHub Security Advisory Go
      URL: https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago
    Title: 'golang-protobuf: encoding/protojson, internal/encoding/json: infinite loop in protojson.Unmarshal when unmarshaling certain forms of invalid JSON'
    Description: The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.
    Severity: MEDIUM
    VendorSeverity:
      ghsa: 2
      redhat: 2
    CVSS:
      redhat:
        V3Vector: CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H
        V3Score: 5.9
    References:
    - https://access.redhat.com/security/cve/CVE-2024-24786
    - https://github.com/protocolbuffers/protobuf-go
    - https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023
    - https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0
    - https://go.dev/cl/569356
    - https://groups.google.com/g/golang-announce/c/ArQ6CDgtEjY/
    - https://nvd.nist.gov/vuln/detail/CVE-2024-24786
    - https://pkg.go.dev/vuln/GO-2024-2611
    - https://www.cve.org/CVERecord?id=CVE-2024-24786
    PublishedDate: '2024-03-05T23:15:07.82Z'
    LastModifiedDate: '2024-03-06T15:18:08.093Z'
